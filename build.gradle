plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.50"
    id "com.github.johnrengelman.shadow" version "2.0.1"
    id "application"
}

mainClassName = "io.ktor.server.netty.DevelopmentEngine"

sourceSets {
    main.kotlin.srcDirs = ['src']
    main.resources.srcDirs = ['resources']
}

repositories {
    jcenter()
    maven { url "https://kotlin.bintray.com/ktor" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.ktor:ktor-server-netty:0.9.3"
    implementation "io.ktor:ktor-html-builder:0.9.3"
    implementation "ch.qos.logback:logback-classic:1.2.1"
}

kotlin.experimental.coroutines = 'enable'

shadowJar {
    baseName = 'my-application'
    classifier = null
    version = null
}

String imageName = "ktordockernow"
tasks.create("buildDockerImage", Exec.class) {
    it.commandLine("docker", "build", ".", "-t", imageName)
}
tasks.create("runDockerImage", Exec.class) {
    it.dependsOn("buildDockerImage")
    it.commandLine("docker", "run", "-d", "-p", "8080:8080", imageName)

    standardOutput = new ByteArrayOutputStream()
    println(standardOutput.toString())
}
// Stopping doesn't work so good :/
// Just run:
// docker stop $(docker ps -q --filter ancestor=ktordockernow )